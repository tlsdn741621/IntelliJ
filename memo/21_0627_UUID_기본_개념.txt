1. UUID란 무엇인가?
정의

128비트(16바이트) 길이의 고유 식별자

전 세계적으로 중복될 가능성이 극히 낮도록 설계된 식별자

RFC 4122 표준 규격에 따라 생성·표현됨 (RFC 4122)

형식

8-4-4-4-12 형태의 32자리 16진수와 하이픈(-) 조합

예: 550e8400-e29b-41d4-a716-446655440000

버전

Version 1: 타임스탬프 기반 + MAC 주소

Version 3: MD5 해시 기반 이름(name-based)

Version 4: 랜덤 기반

Version 5: SHA-1 해시 기반 이름(name-based)

사용 용도

분산 시스템에서 충돌 없는 키 생성

데이터베이스 기본 키

세션 토큰, 파일 이름 등 유니크 값이 필요한 곳

2. Java의 java.util.UUID 클래스
주요 메서드

UUID.randomUUID()

Version 4 방식으로 랜덤 UUID 생성

UUID.nameUUIDFromBytes(byte[] name)

Version 3 방식으로 주어진 바이트 배열 기반 UUID 생성

UUID.fromString(String uuid)

문자열을 UUID 객체로 변환

toString(), getMostSignificantBits(), getLeastSignificantBits() 등

활용 관점별 팁
데이터베이스 기본 키

UUID는 문자열 길이가 길고 인덱스 크기가 커질 수 있으므로, BINARY(16) 타입으로 저장하거나, ULID 같은 대안도 고려.

분산 시스템 식별자

서버 간 시간 동기화를 신경 쓰지 않아도 되므로 Version 4(UUID.randomUUID())를 주로 사용.

보안 토큰

랜덤성이 중요할 때 Version 4, 이름 기반 검증이 필요할 때 Version 3·5 사용.

파일명·리소스 식별

운영 중 Collision 가능성을 더욱 낮추려면 UUID + 타임스탬프 조합 활용.