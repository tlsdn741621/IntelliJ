1. Enum 개념


• Enum(Enumeration)은 열거형 데이터 타입으로,
상수들의 집합을 정의하는 데 사용됩니다.

• Java의 enum은 특정 값 집합을 가지는 데이터 타입을 정의하며,
값들은 모두 고정된 상수입니다.

• enum은 클래스처럼 동작하며,
필드, 메서드, 생성자를 가질 수 있습니다.

2. Enum의 주요 특징

1. 고정된 상수 값 정의:
• 정해진 값 집합 외의 값은 허용되지 않습니다.
• 값들은 암묵적으로 static final로 선언되며, 변경할 수 없습니다.

2. 타입 안정성:
• 정수형 상수를 사용하는 것보다 안전하며,
컴파일 타임에 타입 검사를 수행합니다.

3. 클래스 수준 기능 지원:
• 생성자, 필드, 메서드를 추가할 수 있습니다.

• 상수별로 고유한 동작을 정의할 수 있습니다.

4. Switch문과의 통합:
• enum은 switch문에서 유용하게 사용할 수 있습니다.

5. 암묵적 상속:
• 모든 enum은 java.lang.Enum 클래스를 상속받습니다.
• 이를 통해 몇 가지 기본 메서드(values(), ordinal(), name() 등)를 제공합니다.

3. Enum의 작동 원리
• 컴파일 시, enum은 클래스처럼 변환됩니다.
• 각 상수는 Enum 타입의 객체로 생성됩니다.
• 내부적으로 싱글턴 패턴으로 구현되며,
상수들은 정적 객체로 초기화됩니다.


4. Enum 예제 및 활용

기본적인 사용 예제
예시)
public enum Day {
// 암묵적으로 static final , 클래스명 점 찍고 접근 가능.
MONDAY, TUESDAY, WEDNESDAY, THURSDAY,
FRIDAY, SATURDAY, SUNDAY;
}
Day today = new Day(); // 일반 클래스
Day today = Day.MONDAY; // enum 형식의 클래스.
switch (today) {
  case MONDAY:
    System.out.println("월요일 맞다. ")